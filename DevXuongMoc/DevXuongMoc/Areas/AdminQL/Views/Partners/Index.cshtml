@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<DevXuongMoc.Models.Partner>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/AdminQL/Views/Shared/Admin.cshtml";
}

<div class="row">
    <div class="col-md-8">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center" style="margin-bottom:1rem">
                <!-- Tiêu đề -->
                @*<h1 class="text-left" style="color:black;margin-right:10rem">QUẢN LÝ ADMIN</h1>

                <!-- Thanh tìm kiếm --> *@
                <div class="d-flex gap-2" style="margin-top:1rem">
                    <form action="" method="get" class="d-flex align-items-center">
                        <input type="text" name="name" id="keyword" class="form-control me-2" placeholder="Nhập tên cần tìm..." value="@ViewData["CurrentFilter"]">
                        <button type="submit" style="width:2.4rem;height:2.4rem" class="btn btn-info">
                            <i class="bi bi-search"></i> <i class="fa-solid fa-magnifying-glass"></i>
                        </button>
                    </form>
                    <button class="btn btn-info ajax-action" data-url="@Url.Action("Create")">Tạo mới</button>
                </div>
            </div>
            <table class="table table-hover table-bordered align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Logo)
                        </th>
                        @*   <th>
                        @Html.DisplayNameFor(model => model.Url)
                        </th>
                        <th>
                        @Html.DisplayNameFor(model => model.Orders)
                        </th>
                        <th>
                        @Html.DisplayNameFor(model => model.CreatedDate)
                        </th>
                        <th>
                        @Html.DisplayNameFor(model => model.UpdatedDate)
                        </th>
                        <th>
                        @Html.DisplayNameFor(model => model.AdminCreated)
                        </th>
                        <th>
                        @Html.DisplayNameFor(model => model.AdminUpdated)
                        </th> *@
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Content)
                        </th>
                        @*  <th>
                        @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th>
                        @Html.DisplayNameFor(model => model.Isdelete)
                        </th> *@
                        <th style="min-width:170px">Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                <img src="@item.Logo" alt="@item.Title" style="width: 50px; height: 50px; object-fit: cover; border-radius: 50%;" />
                            </td>
                            @*  <td>
                        @Html.DisplayFor(modelItem => item.Url)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.Orders)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.UpdatedDate)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.AdminCreated)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.AdminUpdated)
                        </td> *@
                            <td>
                                @Html.DisplayFor(modelItem => item.Content)
                            </td>
                            @*  <td>
                        @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.Isdelete)
                        </td> *@
                            <td>
                                <button class="btn btn-warning btn-sm ajax-action" data-url="@Url.Action("Edit", new { id = item.Id })">Sửa</button>
                                <button class="btn btn-info btn-sm ajax-action" data-url="@Url.Action("Details", new { id = item.Id })">Chi tiết</button>
                                <button class="btn btn-danger btn-sm ajax-action" data-url="@Url.Action("Delete", new { id = item.Id })">Xóa</button>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="d-flex justify-content-center mt-4">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), new PagedListRenderOptions
           {
               LiElementClasses = new[] { "page-item" },
               PageClasses = new[] { "page-link" }
           })
            </div>
        </div>
    </div>
    <div class="col-md-4" style="margin-top:4.4rem">
        <div class="click"></div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $(".ajax-action").click(function (e) {
            e.preventDefault();

            // Get the URL from the data attribute
            var url = $(this).data("url");

            // Load the content into the .click div
            $(".click").load(url, function (response, status, xhr) {
                if (status == "error") {
                    alert("Error: " + xhr.status + " " + xhr.statusText);
                }
            });
        });
    });
</script>